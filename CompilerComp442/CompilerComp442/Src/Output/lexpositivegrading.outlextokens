[doubleEquals, ==, 1]
[plus, +, 1]
[pipe, |, 1]
[openParenthesis, (, 1]
[semicolon, ;, 1]
[ifKeyword, if, 1]
[publicKeyword, public, 1]
[readKeyword, read, 1]
[openAndCloseAngledBrackets, <>, 2]
[minus, -, 2]
[ampersand, &, 2]
[closedParenthesis, ), 2]
[comma, ,, 2]
[thenKeyword, then, 2]
[privateKeyword, private, 2]
[writeKeyword, write, 2]
[openAngledBracket, <, 3]
[star, *, 3]
[exclamationMark, !, 3]
[openCurlyBrace, {, 3]
[period, ., 3]
[elseKeyword, else, 3]
[funcKeyword, func, 3]
[returnKeyword, return, 3]
[closedAngledBracket, >, 4]
[slash, /, 4]
[closedCurlyBrace, }, 4]
[colon, :, 4]
[integerKeyword, integer, 4]
[varKeyword, var, 4]
[selfKeyword, self, 4]
[lessThanOrEquals, <=, 5]
[equal, =, 5]
[openSquareBracket, [, 5]
[doubleColon, ::, 5]
[floatKeyword, float, 5]
[structKeyword, struct, 5]
[inheritsKeyword, inherits, 5]
[greaterThanOrEquals, >=, 6]
[closedSquareBracket, ], 6]
[arrow, ->, 6]
[voidKeyword, void, 6]
[whileKeyword, while, 6]
[letKeyword, let, 6]
[funcKeyword, func, 7]
[implKeyword, impl, 7]
[intNum, 0, 13]
[intNum, 1, 14]
[intNum, 10, 15]
[intNum, 12, 16]
[intNum, 123, 17]
[intNum, 12345, 18]
[floatNum, 1.23, 20]
[floatNum, 12.34, 21]
[floatNum, 120.34e10, 22]
[floatNum, 12345.6789e-123, 23]
[identifier, abc, 25]
[identifier, abc1, 26]
[identifier, a1bc, 27]
[identifier, abc_1abc, 28]
[identifier, abc1_abc, 29]
[inlineComment, // this is an inline comment, 31]
[blockComment, /* this is a single line block comment */, 33]
[slash, /, 35]
[star, *, 35]
[identifier, this, 35]
[identifier, is, 35]
[identifier, a, 35]
[identifier, multiple, 36]
[identifier, line, 36]
[identifier, block, 37]
[identifier, comment, 37]
[star, *, 38]
[slash, /, 38]
[slash, /, 40]
[star, *, 40]
[identifier, this, 40]
[identifier, is, 40]
[identifier, an, 40]
[identifier, imbricated, 40]
[slash, /, 41]
[star, *, 41]
[identifier, block, 41]
[identifier, comment, 41]
[star, *, 42]
[slash, /, 42]
[star, *, 43]
[slash, /, 43]
